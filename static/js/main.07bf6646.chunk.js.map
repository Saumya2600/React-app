{"version":3,"sources":["components/Navbar1.js","components/TextForm.js","components/About.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","to","title","type","id","aboutText","onClick","toggleMode","style","color","htmlfor","TextForm","useState","text","setText","heading","for","onChange","event","target","value","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","split","reverse","join","document","getElementById","select","navigator","clipboard","writeText","length","position","right","bottom","About","btntext","setBtnText","myStyle","setMyStyle","border","defaultProps","Alert","alert","role","word","lower","charAt","slice","cap","msg","App","setMode","setAlert","message","setTimeout","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"gOAIe,SAASA,EAAOC,GAC3B,OACI,qBAAKC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MAAzE,SACI,sBAAKD,UAAU,kBAAf,UACI,cAAC,IAAD,CAAMA,UAAU,eAAeE,GAAG,IAAlC,SAAuCH,EAAMI,QAC7C,wBAAQH,UAAU,iBAAiBI,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACI,sBAAMJ,UAAU,0BAEpB,sBAAKA,UAAU,2BAA2BK,GAAG,yBAA7C,UACI,qBAAIL,UAAU,kCAAd,UACI,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAAMA,UAAU,kBAAkB,eAAa,OAAOE,GAAG,IAAzD,oBAEJ,oBAAIF,UAAU,WAAd,SACI,cAAC,IAAD,CAAMA,UAAU,WAAWE,GAAG,SAA9B,SAAwCH,EAAMO,iBAGtD,sBAAKN,UAAU,0BAAf,UACE,uBAAOA,UAAU,mBAAmBO,QAASR,EAAMS,WAAYJ,KAAK,WAAWC,GAAG,2BAClF,uBAAOL,UAAU,mBAAmBS,MAAO,CAACC,MAAM,SAAWC,QAAQ,yBAArE,SAA8F,mECrBrG,SAASC,EAASb,GAC7B,IAgCA,EAAqBc,mBAAS,IAA9B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,OACI,qCACA,sBAAKf,UAAU,YAAYS,MAAO,CAACC,MAAmB,SAAbX,EAAME,KAAc,QAAQ,SAArE,UACI,6BAAKF,EAAMiB,UACX,sBAAKhB,UAAU,OAAf,UACA,uBAAOiB,IAAI,QAAQjB,UAAU,eAC7B,0BAAUA,UAAU,eAAekB,SAVtB,SAACC,GAClBJ,EAAQI,EAAMC,OAAOC,QAS4CZ,MAAO,CAACa,gBAA6B,SAAbvB,EAAME,KAAc,iBAAiB,cAAeoB,MAAOP,EAAMT,GAAG,QAAQkB,KAAK,SAEtK,wBAAQvB,UAAU,uBAAuBO,QAzC7B,WAChB,IAAIiB,EAAQV,EAAKW,cACjBV,EAAQS,GACRzB,EAAM2B,UAAU,yBAA0B,YAsCtC,kCACA,wBAAQ1B,UAAU,sBAAsBO,QArC5B,WAChB,IAAIiB,EAAQV,EAAKa,cACjBZ,EAAQS,GACRzB,EAAM2B,UAAU,yBAA0B,YAkCtC,kCACA,wBAAQ1B,UAAU,uBAAuBO,QAjC/B,WAEdQ,EADY,MAgCR,uBACA,wBAAQf,UAAU,oBAAoBO,QA9B9B,WACZ,IAAIiB,EAASV,EAAKc,MAAM,IAAIC,UAAUC,KAAK,IAC3Cf,EAAQS,GACRzB,EAAM2B,UAAU,8BAA+B,YA2B3C,0BACA,wBAAQ1B,UAAU,uBAAuBO,QAzBhC,WACb,IAAIO,EAAMiB,SAASC,eAAe,SAClClB,EAAKmB,SACLC,UAAUC,UAAUC,UAAUtB,EAAKO,OACnCtB,EAAM2B,UAAU,sBAAuB,YAqBnC,0BAGJ,sBAAK1B,UAAU,iBAAiBS,MAAO,CAACC,MAAmB,SAAbX,EAAME,KAAc,QAAQ,SAA1E,UACI,mDACA,8BAAIa,EAAKc,MAAM,KAAKS,OAApB,cAAuCvB,EAAKuB,OAA5C,iBACA,8BAAI,KAAQvB,EAAKc,MAAM,KAAKS,OAA5B,oBACA,yCACA,4BAAIvB,EAAKuB,OAAO,EAAEvB,EAAK,qDAC7B,mBAAGL,MAAO,CAAC6B,SAAS,WAAWC,MAAM,EAAEC,OAAO,GAA9C,uCCvDS,SAASC,IACpB,MAA8B5B,mBAAS,oBAAvC,mBAAO6B,EAAP,KAAgBC,EAAhB,KACA,EAA8B9B,mBAAU,CACpCH,MAAM,QACNY,gBAAgB,UAFpB,mBAAOsB,EAAP,KAAgBC,EAAhB,KAqBA,OAEI,sBAAK7C,UAAU,YAAYS,MAAOmC,EAAlC,UACI,0CACA,sBAAK5C,UAAU,YAAYK,GAAG,mBAA9B,UACV,sBAAKL,UAAU,iBAAf,UACE,oBAAIA,UAAU,mBAAmBK,GAAG,aAApC,SACE,wBAAQL,UAAU,mBAAmBI,KAAK,SAASK,MAAOmC,EAAS,iBAAe,WAAW,iBAAe,eAAe,gBAAc,OAAO,gBAAc,cAA9J,8BAIF,qBAAKvC,GAAG,cAAcL,UAAU,mCAAmCS,MAAOmC,EAAS,kBAAgB,aAAa,iBAAe,oBAA/H,SACE,qBAAK5C,UAAU,iBAAf,SACE,gEAIN,sBAAKA,UAAU,iBAAf,UACE,oBAAIA,UAAU,mBAAmBK,GAAG,aAApC,SACE,wBAAQL,UAAU,6BAA6BI,KAAK,SAASK,MAAOmC,EAAS,iBAAe,WAAW,iBAAe,eAAe,gBAAc,QAAQ,gBAAc,cAAzK,uBAIF,qBAAKvC,GAAG,cAAcL,UAAU,8BAA8BS,MAAOmC,EAAS,kBAAgB,aAAa,iBAAe,oBAA1H,SACE,qBAAK5C,UAAU,iBAAf,SACE,qHAIN,sBAAKA,UAAU,iBAAf,UACE,oBAAIA,UAAU,mBAAmBK,GAAG,eAApC,SACE,wBAAQL,UAAU,6BAA6BI,KAAK,SAASK,MAAOmC,EAAS,iBAAe,WAAW,iBAAe,iBAAiB,gBAAc,QAAQ,gBAAc,gBAA3K,uBAIF,qBAAKvC,GAAG,gBAAgBL,UAAU,8BAA8BS,MAAOmC,EAAS,kBAAgB,eAAe,iBAAe,oBAA9H,SACE,qBAAK5C,UAAU,iBAAf,SACE,oFAKR,qBAAKA,UAAU,iBAAf,SACA,wBAAQI,KAAK,SAASG,QA3DD,WACK,SAAfqC,EAAQlC,OACPmC,EAAW,CACPnC,MAAM,QACNY,gBAAgB,QAChBwB,OAAO,oBAEXH,EAAW,uBAEXE,EAAW,CACPnC,MAAM,QACNY,gBAAgB,UAEpBqB,EAAW,sBA8CqB3C,UAAU,kBAAtD,SAAyE0C,SF3BzE5C,EAAOiD,aAAe,CAClB5C,MAAO,iBACPG,UAAW,SGxBA0C,MAjBf,SAAejD,GAMX,OAEOA,EAAMkD,OAAQ,sBAAKjD,UAAS,sBAAiBD,EAAMkD,MAAM7C,KAA7B,gCAAiE8C,KAAK,QAApF,UAClB,iCARO,SAACC,GACP,IAAMC,EAAMD,EAAKxB,cACjB,OAAOyB,EAAMC,OAAO,GAAG5B,cAAgB2B,EAAME,MAAM,GAM3CC,CAAIxD,EAAMkD,MAAM7C,QADP,KACyBL,EAAMkD,MAAMO,IAC5D,wBAAQpD,KAAK,SAASJ,UAAU,YAAY,kBAAgB,QAAQ,aAAW,c,OC4DlEyD,MAzDf,WACC,IAwBC,EAAwB5C,mBAAS,SAAjC,mBAAOZ,EAAP,KAAayD,EAAb,KACA,EAA0B7C,mBAAS,MAAnC,mBAAOoC,EAAP,KAAcU,EAAd,KACMjC,EAAU,SAACkC,EAAQxD,GACvBuD,EAAS,CACPH,IAAII,EACJxD,KAAKA,IAEPyD,YAAW,WACTF,EAAS,QACR,OAEL,OACE,8BACE,eAAC,IAAD,WACA,cAAC7D,EAAD,CAASK,MAAM,aAAaF,KAAMA,EAAMO,WAtC5B,WACJ,UAAPP,GACDyD,EAAQ,QACRhC,EAAU,6BAA6B,WACvCK,SAAS+B,KAAKrD,MAAMa,gBAAgB,YAGpCoC,EAAQ,SACRhC,EAAU,8BAA8B,WACxCK,SAAS+B,KAAKrD,MAAMa,gBAAgB,YA8BpC,cAAC,EAAD,CAAO2B,MAAOA,IACd,qBAAKjD,UAAU,6BAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO+D,OAAK,EAACC,KAAK,SAAlB,SACE,cAACvB,EAAD,MAEF,cAAC,IAAD,CAAOsB,OAAK,EAACC,KAAK,IAAlB,SACD,cAACpD,EAAD,CAAUc,UAAWA,EAAWV,QAAQ,4BAA4Bf,KAAMA,iBClDpEgE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7C,SAASC,eAAe,SAM1BiC,M","file":"static/js/main.07bf6646.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <Link className=\"navbar-brand\" to=\"#\">{props.title}</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n                        </li>\r\n                    </ul>\r\n                    <div className=\"form-check form-switch \">\r\n                      <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                      <label className=\"form-check-label\" style={{color:\"green\"}}  htmlfor=\"flexSwitchCheckDefault\"><strong>Enable Dark Mode</strong></label>\r\n                    </div>\r\n                    {/* <div className=\"form-check form-switch \">\r\n                      <input className=\"form-check-input\" onClick={props.toggleMode1} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                      <label className=\"form-check-label\" style={{color:\"red\"}}  htmlfor=\"flexSwitchCheckDefault\">Red Mode</label>\r\n                    </div> */}\r\n                    \r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    aboutText: 'About'\r\n  };","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick=()=>{\r\n        let newText=text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Uppercase\", \"success\");\r\n    }\r\n    const handleLoClick=()=>{\r\n        let newText=text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Uppercase\", \"success\");\r\n    }\r\n    const handleClear=()=>{\r\n        let newText=\" \";\r\n        setText(newText);\r\n    }\r\n    const handleRev=()=>{\r\n        let newText=(text.split(\"\").reverse().join(\"\"));\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Reverse String\", \"success\");\r\n\r\n    }\r\n    const handleCopy=()=>{\r\n        var text =document.getElementById('myBox');\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied to Clipboard\", \"success\");\r\n\r\n\r\n    }\r\n    \r\n    const HandleOnChange=(event)=>{\r\n        setText(event.target.value);\r\n    }\r\n    const [text,setText]=useState('');\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n            <label for=\"myBox\" className=\"form-label\"></label>\r\n            <textarea className=\"form-control\" onChange={HandleOnChange} style={{backgroundColor:props.mode==='dark'?'blanchedalmond':'whitesmoke'}} value={text} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button className=\"btn btn-danger mx-2\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleClear}>Clear All</button>\r\n            <button className=\"btn btn-dark mx-2\" onClick={handleRev}>Reverse Text</button>\r\n            <button className=\"btn btn-warning mx-2\" onClick={handleCopy}>Copy Text</button>\r\n\r\n        </div>\r\n        <div className=\"container my-2\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n            <h1>Your Text Summary</h1>\r\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n            <p>{0.008 * text.split(\" \").length} Minutes Read </p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter something in the textbox to preview here!!\"}</p>\r\n      <p style={{position:\"absolute\",right:3,bottom:6}}>Made by Saumya shah</p>\r\n\r\n\r\n        </div>\r\n       </> \r\n    )\r\n  \r\n  \r\n  \r\n    \r\n};\r\n","import React,{useState} from 'react'\r\n\r\nexport default function About() {\r\n    const [btntext, setBtnText] = useState(\"Enable dark mode\")\r\n    const [myStyle, setMyStyle] = useState( {\r\n        color:'black',\r\n        backgroundColor:'white',\r\n        \r\n    })\r\n   const toggleStyle=()=>{\r\n        if(myStyle.color=='black'){\r\n            setMyStyle({\r\n                color:'white',\r\n                backgroundColor:'black',\r\n                border:'1px solid white'\r\n            })\r\n            setBtnText(\"Enable Light mode\");\r\n        }else{\r\n            setMyStyle({\r\n                color:'black',\r\n                backgroundColor:'white'\r\n            })\r\n            setBtnText(\"Enable Dark mode\");\r\n        }\r\n    }\r\n    return (\r\n        \r\n        <div className=\"container\" style={myStyle}>\r\n            <h1>About Us</h1>\r\n            <div className=\"accordion\" id=\"accordionExample\">\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n      <button className=\"accordion-button\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n        Developer Info\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" style={myStyle} aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\">\r\n        <strong>Made By Saumya Shah</strong> \r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n      <button className=\"accordion-button collapsed\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n        Purpose\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" style={myStyle} aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\">\r\n        <p>This is a simple website which allows the user to manipulate with text forms.</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n      <button className=\"accordion-button collapsed\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n        Contact\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" style={myStyle} aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\">\r\n        <p>You can contact the developer via github.</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div className=\"container my-3\">\r\n<button type=\"button\" onClick={toggleStyle} className=\"btn btn-primary\">{btntext}</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const cap=(word)=>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n\r\n    }\r\n    return (\r\n        \r\n           props.alert &&<div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n       <strong>{cap(props.alert.type)}</strong>: {props.alert.msg}\r\n  <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n</div>\r\n            \r\n        \r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Navbar,NavDropdown,Nav,Container} from 'react-bootstrap';\nimport Navbar1 from './components/Navbar1';\nimport TextForm from './components/TextForm';\nimport About from './components/About';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n const toggleMode=()=>{\n    if(mode==='light'){\n      setMode('dark');\n      showAlert(\"Dark Mode has been enabled\",'success');\n      document.body.style.backgroundColor=\"#202020\";\n      \n    }else{\n      setMode('light');\n      showAlert(\"Light Mode has been enabled\",\"success\");\n      document.body.style.backgroundColor=\"white\";\n    }\n  }\n  // const toggleMode1=()=>{\n  //   if(mode==='light'){\n  //     setMode('dark');\n  //     //showAlert(\"Dark Mode has been enabled\",'success');\n  //     document.body.style.backgroundColor=\"#d22727\";\n      \n  //   }else{\n  //     setMode('light');\n  //     //showAlert(\"Light Mode has been enabled\",\"success\");\n  //     document.body.style.backgroundColor=\"white\";\n  //   }\n  // }\n  const [mode, setMode] = useState('light'); //whether dark mode oos enabled or not\n  const [alert, setAlert] = useState(null);\n  const showAlert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1100)\n  }\n  return (\n    <div>\n      <Router>\n      <Navbar1 title=\"Text-Utils\" mode={mode} toggleMode={toggleMode}  />\n      <Alert alert={alert} />\n      <div className=\"container my-3 text-center\">\n        <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\">\n         <TextForm showAlert={showAlert} heading=\"Enter the text to Analyze\" mode={mode} /> \n          </Route>\n        </Switch>\n       {/* <About/> */}\n       </div>\n       </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}