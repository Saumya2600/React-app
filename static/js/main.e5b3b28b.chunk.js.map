{"version":3,"sources":["components/Navbar1.js","components/TextForm.js","components/About.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","to","title","type","id","aboutText","onClick","toggleMode","style","color","htmlfor","TextForm","useState","text","setText","heading","for","onChange","event","target","value","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","split","reverse","join","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","filter","element","position","right","bottom","About","myStyle","defaultProps","Alert","height","alert","role","word","lower","charAt","slice","cap","msg","App","setMode","setAlert","message","setTimeout","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e5b3b28b.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n                        </li>\r\n                    </ul>\r\n                    <div className=\"form-check form-switch \">\r\n                      <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                      <label className=\"form-check-label\" style={{color:\"green\"}}  htmlfor=\"flexSwitchCheckDefault\"><strong>Enable Dark Mode</strong></label>\r\n                    </div>\r\n                    {/* <div className=\"form-check form-switch \">\r\n                      <input className=\"form-check-input\" onClick={props.toggleMode1} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                      <label className=\"form-check-label\" style={{color:\"red\"}}  htmlfor=\"flexSwitchCheckDefault\">Red Mode</label>\r\n                    </div> */}\r\n                    \r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    aboutText: 'About'\r\n  };","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick=()=>{\r\n        let newText=text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Uppercase\", \"success\");\r\n    }\r\n    const handleLoClick=()=>{\r\n        let newText=text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Uppercase\", \"success\");\r\n    }\r\n    const handleClear=()=>{\r\n        let newText=\" \";\r\n        setText(newText);\r\n    }\r\n    const handleRev=()=>{\r\n        let newText=(text.split(\"\").reverse().join(\"\"));\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Reverse String\", \"success\");\r\n\r\n    }\r\n    const handleCopy=()=>{\r\n        var text =document.getElementById('myBox');\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        document.getSelection().removeAllRanges();\r\n        props.showAlert(\"Copied to Clipboard\", \"success\");\r\n\r\n\r\n    }\r\n    \r\n    const HandleOnChange=(event)=>{\r\n        setText(event.target.value);\r\n    }\r\n    const [text,setText]=useState('');\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n            <label for=\"myBox\" className=\"form-label\"></label>\r\n            <textarea className=\"form-control\" onChange={HandleOnChange} style={{backgroundColor:props.mode==='dark'?'blanchedalmond':'whitesmoke'}} value={text} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-danger mx-2 my-2\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleClear}>Clear All</button>\r\n            <button disabled={text.length===0} className=\"btn btn-dark mx-2 my-2\" onClick={handleRev}>Reverse Text</button>\r\n            <button disabled={text.length===0} className=\"btn btn-warning mx-2 my-2\" onClick={handleCopy}>Copy Text</button>\r\n\r\n        </div>\r\n        <div className=\"container my-2\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n            <h1>Your Text Summary</h1>\r\n            <p>{text.split(\" \").filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\r\n            <p>{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes Read </p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Nothing to preview !!\"}</p>\r\n      <p style={{position:\"absolute\",right:3,bottom:6}}>Made by Saumya shah</p>\r\n\r\n\r\n        </div>\r\n       </> \r\n    )\r\n  \r\n  \r\n  \r\n    \r\n};\r\n","import React,{useState} from 'react'\r\n\r\nexport default function About(props) {\r\n    // const [btntext, setBtnText] = useState(\"Enable dark mode\")\r\n    //  const [myStyle, setMyStyle] = useState( {\r\n    //      color:'black',\r\n    //      backgroundColor:'white',\r\n        \r\n    // })\r\n    let myStyle={\r\n      color:props.mode === 'dark'?'white':'black',\r\n      backgroundColor: props.mode === 'dark'?'rgb(58 54 54)':'white',\r\n      // border: '2px solid',\r\n      // borderColor: props.mode === 'dark'?'white':'gray'\r\n    }\r\n  //  const toggleStyle=()=>{\r\n  //       if(myStyle.color=='black'){\r\n  //           setMyStyle({\r\n  //               color:'white',\r\n  //               backgroundColor:'black',\r\n  //               border:'1px solid white'\r\n  //           })\r\n  //           setBtnText(\"Enable Light mode\");\r\n  //       }else{\r\n  //           setMyStyle({\r\n  //               color:'black',\r\n  //               backgroundColor:'white'\r\n  //           })\r\n  //           setBtnText(\"Enable Dark mode\");\r\n  //       }\r\n   // }\r\n    return (\r\n        \r\n        <div className=\"container\" style={myStyle}>\r\n            <h1>About Us</h1>\r\n            <div className=\"accordion\" id=\"accordionExample\">\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n      <button className=\"accordion-button\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n        Developer Info\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseOne\" className=\"accordion-collapse collapse\" style={myStyle} aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\">\r\n        <strong>Made By Saumya Shah</strong> \r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n      <button className=\"accordion-button collapsed\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n        Purpose\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" style={myStyle} aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\">\r\n        <p>This is a simple website which allows the user to manipulate with text forms.</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n      <button className=\"accordion-button collapsed\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n        Contact\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" style={myStyle} aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\">\r\n        <p>You can contact the developer via github.</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n</div>\r\n\r\n)\r\n    }    \r\n\r\n      {/* <button type=\"button\" onClick={toggleStyle} className=\"btn btn-primary\">{btntext}</button> */}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const cap=(word)=>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n\r\n    }\r\n    return (\r\n        <div style={{height:'50px'}}>\r\n           {props.alert &&<div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n       <strong>{cap(props.alert.type)}</strong>: {props.alert.msg}\r\n  <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n</div>}\r\n</div>\r\n            \r\n        \r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Navbar,NavDropdown,Nav,Container} from 'react-bootstrap';\nimport Navbar1 from './components/Navbar1';\nimport TextForm from './components/TextForm';\nimport About from './components/About';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n const toggleMode=()=>{\n    if(mode==='light'){\n      setMode('dark');\n      showAlert(\"Dark Mode has been enabled\",'success');\n      document.body.style.backgroundColor=\"rgb(58 54 54)\";\n      \n    }else{\n      setMode('light');\n      showAlert(\"Light Mode has been enabled\",\"success\");\n      document.body.style.backgroundColor=\"white\";\n    }\n  }\n  // const toggleMode1=()=>{\n  //   if(mode==='light'){\n  //     setMode('dark');\n  //     //showAlert(\"Dark Mode has been enabled\",'success');\n  //     document.body.style.backgroundColor=\"#d22727\";\n      \n  //   }else{\n  //     setMode('light');\n  //     //showAlert(\"Light Mode has been enabled\",\"success\");\n  //     document.body.style.backgroundColor=\"white\";\n  //   }\n  // }\n  const [mode, setMode] = useState('light'); //whether dark mode oos enabled or not\n  const [alert, setAlert] = useState(null);\n  const showAlert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1100)\n  }\n  return (\n    <div>\n      <Router>\n      <Navbar1 title=\"Text-Utils\" mode={mode} toggleMode={toggleMode}  />\n      <Alert alert={alert} />\n      <div className=\"container my-3 text-center\">\n        <Switch>\n          <Route exact path=\"/about\">\n            <About mode={mode} />\n          </Route>\n          <Route exact path=\"/\">\n         <TextForm showAlert={showAlert} heading=\"All in One - Word Counter, Copy, Reverse & More\" mode={mode} /> \n          </Route>\n        </Switch>\n       {/* <About/> */}\n       </div>\n       </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}